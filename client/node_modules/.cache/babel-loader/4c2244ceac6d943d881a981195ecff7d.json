{"ast":null,"code":"var _jsxFileName = \"/Users/khoa/Dropbox/Websites/covid19/covid-app/client/src/components/Params.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { Input, InputAdornment, Table, TableBody, TableCell, TableContainer, TableRow } from '@material-ui/core';\nimport SwipeableViews from \"react-swipeable-views\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nexport default class Params extends Component {\n  constructor(props) {\n    super(props);\n\n    this.formatAsPercent = num => {\n      return num + '%';\n    };\n\n    this.updateTab = tabIndx => {\n      this.setState({\n        currentTab: tabIndx\n      });\n    };\n\n    this.state = {\n      currentTab: 0\n    };\n  }\n\n  render() {\n    const {\n      currentTab\n    } = this.state;\n    const {\n      modelParams,\n      r0_params,\n      hospBeds,\n      ICUBeds,\n      ventilators\n    } = this.props.params;\n    const modelParamTitles = ['Hospital Admission Rates', 'ICU Admission Rates', '% ICU Admissions needing Ventilator', 'Ventilator Rates', 'Case Fatality Rate (Normal)', 'Case Fatality Rate (Overload)', 'Mortality Rate of ICU Blocked Patients', 'Mortality Rate of Ventilator Blocked Patients'];\n    const r0ParamTitles = ['Do Nothing', 'Social Distancing', 'Relaxed Lockdown', 'Significant Lockdown', 'Critical Lockdown'];\n    const hospTitles = ['Number of Hospital Beds', 'Bed Utilisation', 'Surge Bed Utilisation'];\n    const ICUTitles = ['Number of ICU Beds', 'ICU Bed Utilisation', 'Surge ICU Bed Utilisation'];\n    const ventTitles = ['Number of Ventilators', 'Ventilator Utilisation', 'Surge Ventilator Utilisation', 'Surge Ventilator Capacity'];\n    const {\n      updateModelParams,\n      updateR0Params,\n      updateHospBeds,\n      updateICUBeds,\n      updateVentilators\n    } = this.props.eventHandlers;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      style: {\n        padding: 20,\n        paddingTop: 80\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 60\n      }\n    }, \"Parameters\"))), /*#__PURE__*/React.createElement(AppBar, {\n      className: \"border-bottom border-gray\",\n      style: {\n        paddingBottom: 5\n      },\n      position: \"static\",\n      color: \"transparent\",\n      elevation: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      value: currentTab,\n      onChange: (_, value) => {\n        this.setState({\n          currentTab: value\n        });\n      },\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      variant: \"scrollable\",\n      scrollButtons: \"auto\",\n      \"aria-label\": \"full width tabs example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      label: \"Model\",\n      id: \"full-width-tab-0\",\n      \"aria-controls\": \"full-width-tabpanel-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Tab, {\n      label: \"Intervention\",\n      id: \"full-width-tab-1\",\n      \"aria-controls\": \"full-width-tabpanel-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Tab, {\n      label: \"Hospitals\",\n      id: \"full-width-tab-2\",\n      \"aria-controls\": \"full-width-tabpanel-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Tab, {\n      label: \"ICUs\",\n      id: \"full-width-tab-3\",\n      \"aria-controls\": \"full-width-tabpanel-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Tab, {\n      label: \"Ventilators\",\n      id: \"full-width-tab-4\",\n      \"aria-controls\": \"full-width-tabpanel-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }))), currentTab === 0 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 42\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 60\n      }\n    }, \"Model Parameters\"))), /*#__PURE__*/React.createElement(TableContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, modelParams.map((entry, index) => {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }\n      }, modelParamTitles[index]), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0,\n          width: \"20%\"\n        },\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        value: entry,\n        margin: \"dense\",\n        onChange: event => {\n          const value = Number(event.target.value) > 100 ? \"100\" : event.target.value;\n          modelParams[index] = value;\n          updateModelParams(modelParams);\n        },\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 47\n          }\n        }, \"%\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }\n      })));\n    }))))), currentTab === 1 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 42\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 60\n      }\n    }, \"Intervention Parameters\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 60\n      }\n    }, \"R0 of Intervention Measures\"))), /*#__PURE__*/React.createElement(TableContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, r0_params.map((entry, index) => /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        paddingLeft: 0,\n        paddingRight: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, r0ParamTitles[index]), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      style: {\n        paddingLeft: 0,\n        paddingRight: 0,\n        width: \"20%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      value: entry,\n      margin: \"dense\",\n      onChange: event => {\n        r0_params[index] = event.target.value;\n        updateR0Params(r0_params);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    })))))))), currentTab === 2 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 42\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 60\n      }\n    }, \"Hospital Beds\"))), /*#__PURE__*/React.createElement(TableContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, hospBeds.map((entry, index) => {\n      const isInt = index === 0;\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 33\n        }\n      }, hospTitles[index]), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0,\n          width: \"20%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        value: entry,\n        margin: \"dense\",\n        onChange: event => {\n          const value = Number(event.target.value) > 100 && !isInt ? \"100\" : event.target.value;\n          hospBeds[index] = value;\n          updateHospBeds(hospBeds);\n        },\n        endAdornment: !isInt && /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 57\n          }\n        }, \"%\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 33\n        }\n      })));\n    }))))), currentTab === 3 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 42\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 60\n      }\n    }, \"ICU Beds\"))), /*#__PURE__*/React.createElement(TableContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, ICUBeds.map((entry, index) => {\n      const isInt = index === 0;\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 33\n        }\n      }, ICUTitles[index]), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0,\n          width: \"20%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        value: entry,\n        margin: \"dense\",\n        onChange: event => {\n          const value = Number(event.target.value) > 100 && !isInt ? \"100\" : event.target.value;\n          ICUBeds[index] = value;\n          console.log(ICUBeds[index]);\n          updateICUBeds(ICUBeds);\n        },\n        fullWidth: true,\n        endAdornment: !isInt && /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 57\n          }\n        }, \"%\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 33\n        }\n      })));\n    }))))), currentTab === 4 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 42\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 60\n      }\n    }, \"Ventilators\"))), /*#__PURE__*/React.createElement(TableContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 25\n      }\n    }, ventilators.map((entry, index) => {\n      const isInt = index === 0;\n      const isSurge = index === 3;\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 33\n        }\n      }, ventTitles[index]), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0,\n          width: \"20%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        value: entry,\n        margin: \"dense\",\n        onChange: event => {\n          const value = Number(event.target.value) > 100 && !isInt && !isSurge ? \"100\" : event.target.value;\n          ventilators[index] = value;\n          updateVentilators(ventilators);\n        },\n        endAdornment: !isInt && /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 57\n          }\n        }, \"%\"),\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 33\n        }\n      })));\n    })))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/khoa/Dropbox/Websites/covid19/covid-app/client/src/components/Params.js"],"names":["React","Component","Row","Col","Container","Input","InputAdornment","Table","TableBody","TableCell","TableContainer","TableRow","SwipeableViews","AppBar","Tabs","Tab","Params","constructor","props","formatAsPercent","num","updateTab","tabIndx","setState","currentTab","state","render","modelParams","r0_params","hospBeds","ICUBeds","ventilators","params","modelParamTitles","r0ParamTitles","hospTitles","ICUTitles","ventTitles","updateModelParams","updateR0Params","updateHospBeds","updateICUBeds","updateVentilators","eventHandlers","padding","paddingTop","textAlign","paddingBottom","_","value","map","entry","index","paddingLeft","paddingRight","width","event","Number","target","isInt","console","log","isSurge"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { Input, InputAdornment, Table, TableBody, TableCell, TableContainer, TableRow } from '@material-ui/core';\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nexport default class Params extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            currentTab: 0\r\n        }\r\n    }\r\n    formatAsPercent = (num) => {\r\n        return num + '%';\r\n    }\r\n\r\n    updateTab = (tabIndx) => {\r\n        this.setState({ currentTab: tabIndx });\r\n    }\r\n\r\n    render() {\r\n        const { currentTab } = this.state;\r\n        const { modelParams, r0_params, hospBeds, ICUBeds, ventilators } = this.props.params;\r\n        const modelParamTitles = [ \r\n            'Hospital Admission Rates', \r\n            'ICU Admission Rates', \r\n            '% ICU Admissions needing Ventilator',\r\n            'Ventilator Rates', \r\n            'Case Fatality Rate (Normal)', \r\n            'Case Fatality Rate (Overload)',\r\n            'Mortality Rate of ICU Blocked Patients', \r\n            'Mortality Rate of Ventilator Blocked Patients' \r\n        ];\r\n        const r0ParamTitles = [ \r\n            'Do Nothing', \r\n            'Social Distancing', \r\n            'Relaxed Lockdown', \r\n            'Significant Lockdown', \r\n            'Critical Lockdown' \r\n        ];\r\n        const hospTitles = [ \r\n            'Number of Hospital Beds', \r\n            'Bed Utilisation', \r\n            'Surge Bed Utilisation' \r\n        ];\r\n        const ICUTitles = [\r\n            'Number of ICU Beds', \r\n            'ICU Bed Utilisation', \r\n            'Surge ICU Bed Utilisation' \r\n        ];\r\n        const ventTitles = [\r\n            'Number of Ventilators', \r\n            'Ventilator Utilisation', \r\n            'Surge Ventilator Utilisation', \r\n            'Surge Ventilator Capacity'\r\n        ]\r\n        const { updateModelParams, updateR0Params, updateHospBeds, updateICUBeds, updateVentilators } = this.props.eventHandlers;\r\n        return(\r\n            <div>\r\n                <Container fluid style={{ padding: 20, paddingTop: 80 }}>\r\n                    <Row>\r\n                        <Col style={{ textAlign: \"left\" }}><h4>Parameters</h4></Col>\r\n                    </Row>\r\n                    <AppBar className=\"border-bottom border-gray\" style={{ paddingBottom: 5 }} position=\"static\" color=\"transparent\" elevation={0}>\r\n                        <Tabs\r\n                        value={currentTab}\r\n                        onChange={(_, value) => {\r\n                            this.setState({currentTab: value})\r\n                        }}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                        aria-label=\"full width tabs example\"\r\n                        >\r\n                        <Tab label=\"Model\"\r\n                        id=\"full-width-tab-0\"\r\n                        aria-controls=\"full-width-tabpanel-0\"/>\r\n                        <Tab label=\"Intervention\"\r\n                        id=\"full-width-tab-1\"\r\n                        aria-controls=\"full-width-tabpanel-1\"/>\r\n                        <Tab label=\"Hospitals\"\r\n                        id=\"full-width-tab-2\"\r\n                        aria-controls=\"full-width-tabpanel-2\"/>\r\n                        <Tab label=\"ICUs\"\r\n                        id=\"full-width-tab-3\"\r\n                        aria-controls=\"full-width-tabpanel-3\"/>\r\n                        <Tab label=\"Ventilators\"\r\n                        id=\"full-width-tab-4\"\r\n                        aria-controls=\"full-width-tabpanel-4\"/>\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    {currentTab === 0 && <div>\r\n                    <Row style={{ paddingTop: 10 }}>\r\n                        <Col style={{ textAlign: \"left\" }}><h5>Model Parameters</h5></Col>\r\n                    </Row>\r\n                    <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                        {modelParams.map((entry, index) => {\r\n                            return (\r\n                            <TableRow key={index}>\r\n                                <TableCell style={{ paddingLeft: 0, paddingRight: 0 }}>{modelParamTitles[index]}</TableCell>\r\n                                <TableCell align=\"right\" style={{ paddingLeft: 0, paddingRight: 0, width: \"20%\" }}\r\n                                size='small'>\r\n                                <Input\r\n                                value={entry} \r\n                                margin=\"dense\"\r\n                                onChange={event => {\r\n                                    const value = Number(event.target.value) > 100 ? \"100\" : event.target.value;\r\n                                    modelParams[index] = value;\r\n                                    updateModelParams(modelParams);\r\n                                }}\r\n                                endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n                                />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            )\r\n                        })}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </TableContainer>\r\n                    </div>}\r\n                    {currentTab === 1 && <div>\r\n                    <Row style={{ paddingTop: 10 }}>\r\n                        <Col style={{ textAlign: \"left\" }}><h5>Intervention Parameters</h5></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col style={{ textAlign: \"left\" }}><h6>R0 of Intervention Measures</h6></Col>\r\n                    </Row>\r\n                    <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                        {r0_params.map((entry, index) => (\r\n                            <TableRow key={index}>\r\n                                <TableCell style={{ paddingLeft: 0, paddingRight: 0 }}>{r0ParamTitles[index]}</TableCell>\r\n                                <TableCell align=\"right\" style={{ paddingLeft: 0, paddingRight: 0, width: \"20%\" }}>\r\n                                <Input\r\n                                value={entry} \r\n                                margin=\"dense\"\r\n                                onChange={event => {\r\n                                    r0_params[index] = event.target.value;\r\n                                    updateR0Params(r0_params);\r\n                                }}\r\n                                />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </TableContainer>                    \r\n                    </div>}\r\n                    {currentTab === 2 && <div>\r\n                    <Row style={{ paddingTop: 10 }}>\r\n                        <Col style={{ textAlign: \"left\" }}><h5>Hospital Beds</h5></Col>\r\n                    </Row>\r\n                    <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                        {hospBeds.map((entry, index) => {\r\n                            const isInt = index === 0;\r\n                            return (\r\n                            <TableRow key={index}>\r\n                                <TableCell style={{ paddingLeft: 0, paddingRight: 0 }}>{hospTitles[index]}</TableCell>\r\n                                <TableCell align=\"right\" style={{ paddingLeft: 0, paddingRight: 0, width: \"20%\" }}>\r\n                                <Input\r\n                                value={entry} \r\n                                margin=\"dense\"\r\n                                onChange={event => {\r\n                                    const value = (Number(event.target.value) > 100 && !isInt) ? \"100\" : event.target.value;\r\n                                    hospBeds[index] = value;\r\n                                    updateHospBeds(hospBeds);\r\n                                }}\r\n                                endAdornment={!isInt && <InputAdornment position=\"end\">%</InputAdornment>}\r\n                                />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )})\r\n                        }\r\n                        </TableBody>\r\n                    </Table>\r\n                    </TableContainer>\r\n                    </div>}\r\n                    {currentTab === 3 && <div>\r\n                    <Row style={{ paddingTop: 10 }}>\r\n                        <Col style={{ textAlign: \"left\" }}><h5>ICU Beds</h5></Col>\r\n                    </Row>\r\n                    <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                        {ICUBeds.map((entry, index) => {\r\n                            const isInt = index === 0;\r\n                            return (\r\n                            <TableRow key={index}>\r\n                                <TableCell style={{ paddingLeft: 0, paddingRight: 0 }}>{ICUTitles[index]}</TableCell>\r\n                                <TableCell align=\"right\" style={{ paddingLeft: 0, paddingRight: 0, width: \"20%\" }}>\r\n                                <Input\r\n                                value={entry} \r\n                                margin=\"dense\"\r\n                                onChange={event => {\r\n                                    const value = (Number(event.target.value) > 100 && !isInt) ? \"100\" : event.target.value;\r\n                                    ICUBeds[index] = value;\r\n                                    console.log(ICUBeds[index]);\r\n                                    updateICUBeds(ICUBeds);\r\n                                }}\r\n                                fullWidth\r\n                                endAdornment={!isInt && <InputAdornment position=\"end\">%</InputAdornment>}\r\n                                />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </TableContainer>\r\n                    </div>}\r\n                    {currentTab === 4 && <div>\r\n                    <Row style={{ paddingTop: 10 }}>\r\n                        <Col style={{ textAlign: \"left\" }}><h5>Ventilators</h5></Col>\r\n                    </Row>\r\n                    <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                        {ventilators.map((entry, index) => {\r\n                            const isInt = index === 0;\r\n                            const isSurge = index === 3;\r\n                            return (\r\n                            <TableRow key={index}>\r\n                                <TableCell style={{ paddingLeft: 0, paddingRight: 0 }}>{ventTitles[index]}</TableCell>\r\n                                <TableCell align=\"right\" style={{ paddingLeft: 0, paddingRight: 0, width: \"20%\" }}>\r\n                                <Input\r\n                                value={entry} \r\n                                margin=\"dense\"\r\n                                onChange={event => {\r\n                                    const value = (Number(event.target.value) > 100 && !isInt && !isSurge) ? \"100\" : event.target.value;\r\n                                    ventilators[index] = value;\r\n                                    updateVentilators(ventilators);\r\n                                }}\r\n                                endAdornment={!isInt && <InputAdornment position=\"end\">%</InputAdornment>}\r\n                                fullWidth\r\n                                />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </TableContainer>\r\n                    </div>}\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}