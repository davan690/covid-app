{"ast":null,"code":"var _jsxFileName = \"/Users/khoa/Dropbox/Websites/covid19/covid-app/client/src/components/Params.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { Input, InputAdornment, Table, TableBody, TableCell, TableContainer, TableRow } from '@material-ui/core';\nexport default class Params extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.formatAsPercent = num => {\n      return num + '%';\n    };\n  }\n\n  render() {\n    const {\n      currentTab\n    } = this.props;\n    const {\n      modelParams,\n      r0_params,\n      hospBeds,\n      ICUBeds,\n      ventilators\n    } = this.props.params;\n    const modelParamTitles = ['Case Fatality Rate (Normal)', 'Case Fatality Rate (Overload)', 'Mortality Rate of ICU Blocked Patients', 'Mortality Rate of Ventilator Blocked Patients'];\n    const r0ParamTitles = ['Do Nothing', 'Social Distancing', 'Relaxed Lockdown', 'Significant Lockdown', 'Critical Lockdown'];\n    const hospTitles = ['Number of Hospital Beds', 'Hospital Admission Rates', 'Bed Utilisation', 'Surge Bed Utilisation'];\n    const ICUTitles = ['Number of ICU Beds', 'ICU Admission Rates', 'ICU Bed Utilisation', 'Surge ICU Bed Utilisation'];\n    const ventTitles = ['Number of Ventilators', 'Ventilator Rates', 'Ventilator Utilisation', 'Surge Ventilator Utilisation', 'Surge Ventilator Capacity'];\n    const {\n      updateModelParams,\n      updateR0Params,\n      updateHospBeds,\n      updateICUBeds,\n      updateVentilators\n    } = this.props.eventHandlers;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      style: {\n        paddingLeft: 20,\n        paddingRight: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 60\n      }\n    }, \"Parameters\"))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 60\n      }\n    }, \"Model Parameters\"))), /*#__PURE__*/React.createElement(TableContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, modelParams.map((entry, index) => {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }\n      }, modelParamTitles[index]), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0,\n          width: \"20%\"\n        },\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        value: entry,\n        margin: \"dense\",\n        onChange: event => {\n          const value = Number(event.target.value) > 100 ? \"100\" : event.target.value;\n          modelParams[index] = value;\n          updateModelParams(modelParams);\n        },\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 47\n          }\n        }, \"%\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      })));\n    })))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 60\n      }\n    }, \"Intervention Parameters\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 60\n      }\n    }, \"R0 of Intervention Measures\"))), /*#__PURE__*/React.createElement(TableContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, r0_params.map((entry, index) => /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        paddingLeft: 0,\n        paddingRight: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, r0ParamTitles[index]), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      style: {\n        paddingLeft: 0,\n        paddingRight: 0,\n        width: \"20%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      value: entry,\n      margin: \"dense\",\n      onChange: event => {\n        r0_params[index] = event.target.value;\n        updateR0Params(r0_params);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }))))))), currentTab === 1 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 42\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 60\n      }\n    }, \"Hospital Beds\"))), /*#__PURE__*/React.createElement(TableContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, hospBeds.map((entry, index) => {\n      const isInt = index === 0;\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 33\n        }\n      }, hospTitles[index]), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0,\n          width: \"20%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        value: entry,\n        margin: \"dense\",\n        onChange: event => {\n          const value = Number(event.target.value) > 100 && !isInt ? \"100\" : event.target.value;\n          hospBeds[index] = value;\n          updateHospBeds(hospBeds);\n        },\n        endAdornment: !isInt && /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 57\n          }\n        }, \"%\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }\n      })));\n    }))))), currentTab === 2 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 42\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 60\n      }\n    }, \"ICU Beds\"))), /*#__PURE__*/React.createElement(TableContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, ICUBeds.map((entry, index) => {\n      const isInt = index === 0;\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 33\n        }\n      }, ICUTitles[index]), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0,\n          width: \"20%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        value: entry,\n        margin: \"dense\",\n        onChange: event => {\n          const value = Number(event.target.value) > 100 && !isInt ? \"100\" : event.target.value;\n          ICUBeds[index] = value;\n          console.log(ICUBeds[index]);\n          updateICUBeds(ICUBeds);\n        },\n        fullWidth: true,\n        endAdornment: !isInt && /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 57\n          }\n        }, \"%\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 33\n        }\n      })));\n    }))))), currentTab === 3 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 42\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 60\n      }\n    }, \"Ventilators\"))), /*#__PURE__*/React.createElement(TableContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }, ventilators.map((entry, index) => {\n      const isInt = index === 0;\n      const isSurge = index === 3;\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 33\n        }\n      }, ventTitles[index]), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        style: {\n          paddingLeft: 0,\n          paddingRight: 0,\n          width: \"20%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        value: entry,\n        margin: \"dense\",\n        onChange: event => {\n          const value = Number(event.target.value) > 100 && !isInt && !isSurge ? \"100\" : event.target.value;\n          ventilators[index] = value;\n          updateVentilators(ventilators);\n        },\n        endAdornment: !isInt && /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 57\n          }\n        }, \"%\"),\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 33\n        }\n      })));\n    })))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/khoa/Dropbox/Websites/covid19/covid-app/client/src/components/Params.js"],"names":["React","Component","Row","Col","Container","Input","InputAdornment","Table","TableBody","TableCell","TableContainer","TableRow","Params","formatAsPercent","num","render","currentTab","props","modelParams","r0_params","hospBeds","ICUBeds","ventilators","params","modelParamTitles","r0ParamTitles","hospTitles","ICUTitles","ventTitles","updateModelParams","updateR0Params","updateHospBeds","updateICUBeds","updateVentilators","eventHandlers","paddingLeft","paddingRight","textAlign","paddingTop","map","entry","index","width","event","value","Number","target","isInt","console","log","isSurge"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { Input, InputAdornment, Table, TableBody, TableCell, TableContainer, TableRow } from '@material-ui/core';\r\n\r\nexport default class Params extends Component {\r\n    formatAsPercent = (num) => {\r\n        return num + '%';\r\n    }\r\n\r\n    render() {\r\n        const { currentTab } = this.props;\r\n        const { modelParams, r0_params, hospBeds, ICUBeds, ventilators } = this.props.params;\r\n        const modelParamTitles = [  \r\n            'Case Fatality Rate (Normal)', \r\n            'Case Fatality Rate (Overload)',\r\n            'Mortality Rate of ICU Blocked Patients', \r\n            'Mortality Rate of Ventilator Blocked Patients' \r\n        ];\r\n        const r0ParamTitles = [ \r\n            'Do Nothing', \r\n            'Social Distancing', \r\n            'Relaxed Lockdown', \r\n            'Significant Lockdown', \r\n            'Critical Lockdown' \r\n        ];\r\n        const hospTitles = [\r\n            'Number of Hospital Beds', \r\n            'Hospital Admission Rates',  \r\n            'Bed Utilisation', \r\n            'Surge Bed Utilisation' \r\n        ];\r\n        const ICUTitles = [\r\n            'Number of ICU Beds',\r\n            'ICU Admission Rates', \r\n            'ICU Bed Utilisation', \r\n            'Surge ICU Bed Utilisation' \r\n        ];\r\n        const ventTitles = [\r\n            'Number of Ventilators',\r\n            'Ventilator Rates',  \r\n            'Ventilator Utilisation', \r\n            'Surge Ventilator Utilisation', \r\n            'Surge Ventilator Capacity'\r\n        ]\r\n        const { updateModelParams, updateR0Params, updateHospBeds, updateICUBeds, updateVentilators } = this.props.eventHandlers;\r\n        return(\r\n            <div>\r\n                <Container fluid style={{ paddingLeft: 20, paddingRight: 20 }}>\r\n                    <Row>\r\n                        <Col style={{ textAlign: \"left\" }}><h4>Parameters</h4></Col>\r\n                    </Row>\r\n                    <Row style={{ paddingTop: 10 }}>\r\n                        <Col style={{ textAlign: \"left\" }}><h5>Model Parameters</h5></Col>\r\n                    </Row>\r\n                    <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                        {modelParams.map((entry, index) => {\r\n                            return (\r\n                            <TableRow key={index}>\r\n                                <TableCell style={{ paddingLeft: 0, paddingRight: 0 }}>{modelParamTitles[index]}</TableCell>\r\n                                <TableCell align=\"right\" style={{ paddingLeft: 0, paddingRight: 0, width: \"20%\" }}\r\n                                size='small'>\r\n                                <Input\r\n                                value={entry} \r\n                                margin=\"dense\"\r\n                                onChange={event => {\r\n                                    const value = Number(event.target.value) > 100 ? \"100\" : event.target.value;\r\n                                    modelParams[index] = value;\r\n                                    updateModelParams(modelParams);\r\n                                }}\r\n                                endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n                                />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            )\r\n                        })}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </TableContainer>\r\n                    <Row style={{ paddingTop: 10 }}>\r\n                        <Col style={{ textAlign: \"left\" }}><h5>Intervention Parameters</h5></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col style={{ textAlign: \"left\" }}><h6>R0 of Intervention Measures</h6></Col>\r\n                    </Row>\r\n                    <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                        {r0_params.map((entry, index) => (\r\n                            <TableRow key={index}>\r\n                                <TableCell style={{ paddingLeft: 0, paddingRight: 0 }}>{r0ParamTitles[index]}</TableCell>\r\n                                <TableCell align=\"right\" style={{ paddingLeft: 0, paddingRight: 0, width: \"20%\" }}>\r\n                                <Input\r\n                                value={entry} \r\n                                margin=\"dense\"\r\n                                onChange={event => {\r\n                                    r0_params[index] = event.target.value;\r\n                                    updateR0Params(r0_params);\r\n                                }}\r\n                                />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </TableContainer>\r\n                    {currentTab === 1 && <div>\r\n                    <Row style={{ paddingTop: 10 }}>\r\n                        <Col style={{ textAlign: \"left\" }}><h5>Hospital Beds</h5></Col>\r\n                    </Row>\r\n                    <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                        {hospBeds.map((entry, index) => {\r\n                            const isInt = index === 0;\r\n                            return (\r\n                            <TableRow key={index}>\r\n                                <TableCell style={{ paddingLeft: 0, paddingRight: 0 }}>{hospTitles[index]}</TableCell>\r\n                                <TableCell align=\"right\" style={{ paddingLeft: 0, paddingRight: 0, width: \"20%\" }}>\r\n                                <Input\r\n                                value={entry} \r\n                                margin=\"dense\"\r\n                                onChange={event => {\r\n                                    const value = (Number(event.target.value) > 100 && !isInt) ? \"100\" : event.target.value;\r\n                                    hospBeds[index] = value;\r\n                                    updateHospBeds(hospBeds);\r\n                                }}\r\n                                endAdornment={!isInt && <InputAdornment position=\"end\">%</InputAdornment>}\r\n                                />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )})\r\n                        }\r\n                        </TableBody>\r\n                    </Table>\r\n                    </TableContainer>\r\n                    </div>}\r\n                    {currentTab === 2 && <div>\r\n                    <Row style={{ paddingTop: 10 }}>\r\n                        <Col style={{ textAlign: \"left\" }}><h5>ICU Beds</h5></Col>\r\n                    </Row>\r\n                    <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                        {ICUBeds.map((entry, index) => {\r\n                            const isInt = index === 0;\r\n                            return (\r\n                            <TableRow key={index}>\r\n                                <TableCell style={{ paddingLeft: 0, paddingRight: 0 }}>{ICUTitles[index]}</TableCell>\r\n                                <TableCell align=\"right\" style={{ paddingLeft: 0, paddingRight: 0, width: \"20%\" }}>\r\n                                <Input\r\n                                value={entry} \r\n                                margin=\"dense\"\r\n                                onChange={event => {\r\n                                    const value = (Number(event.target.value) > 100 && !isInt) ? \"100\" : event.target.value;\r\n                                    ICUBeds[index] = value;\r\n                                    console.log(ICUBeds[index]);\r\n                                    updateICUBeds(ICUBeds);\r\n                                }}\r\n                                fullWidth\r\n                                endAdornment={!isInt && <InputAdornment position=\"end\">%</InputAdornment>}\r\n                                />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </TableContainer>\r\n                    </div>}\r\n                    {currentTab === 3 && <div>\r\n                    <Row style={{ paddingTop: 10 }}>\r\n                        <Col style={{ textAlign: \"left\" }}><h5>Ventilators</h5></Col>\r\n                    </Row>\r\n                    <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                        {ventilators.map((entry, index) => {\r\n                            const isInt = index === 0;\r\n                            const isSurge = index === 3;\r\n                            return (\r\n                            <TableRow key={index}>\r\n                                <TableCell style={{ paddingLeft: 0, paddingRight: 0 }}>{ventTitles[index]}</TableCell>\r\n                                <TableCell align=\"right\" style={{ paddingLeft: 0, paddingRight: 0, width: \"20%\" }}>\r\n                                <Input\r\n                                value={entry} \r\n                                margin=\"dense\"\r\n                                onChange={event => {\r\n                                    const value = (Number(event.target.value) > 100 && !isInt && !isSurge) ? \"100\" : event.target.value;\r\n                                    ventilators[index] = value;\r\n                                    updateVentilators(ventilators);\r\n                                }}\r\n                                endAdornment={!isInt && <InputAdornment position=\"end\">%</InputAdornment>}\r\n                                fullWidth\r\n                                />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )})}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </TableContainer>\r\n                    </div>}\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}