{"ast":null,"code":"var _jsxFileName = \"/Users/khoa/Dropbox/Websites/covid19/covid-app/client/src/components/Model.js\";\nimport React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Input from './Input';\nimport Output from './Output';\n\nconst config = require('../config.json');\n\nexport default class Model extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateMeasureWeeks = measureWeeks => {\n      this.setState({\n        measureWeeks: measureWeeks\n      });\n    };\n\n    this.updateModelParams = modelParams => {\n      this.setState({\n        modelParams: modelParams\n      });\n      this.updateData();\n    };\n\n    this.updateR0Params = r0_params => {\n      this.setState({\n        r0_params: r0_params\n      });\n      this.updateData();\n    };\n\n    this.updateHospBeds = hospBeds => {\n      this.setState({\n        hospBeds: hospBeds\n      });\n      this.updateData();\n    };\n\n    this.updateICUBeds = ICUBeds => {\n      this.setState({\n        ICUBeds: ICUBeds\n      });\n      this.updateData();\n    };\n\n    this.updateVentilators = ventilators => {\n      this.setState({\n        ventilators: ventilators\n      });\n      this.updateData();\n    };\n\n    this.updateTab = tabIndx => {\n      this.setState({\n        currentTab: tabIndx\n      });\n    };\n\n    this.updateData = () => {\n      const {\n        measureWeeks,\n        modelParams,\n        r0_params,\n        hospBeds,\n        ICUBeds,\n        ventilators,\n        population,\n        weeklyHosp,\n        cases\n      } = this.state;\n      const rootUrl = config[\"api_url\"];\n      const endPoint = \"model\";\n      var queryParamStr = \"?int_len=\" + measureWeeks;\n      queryParamStr += \"&model_vals=\" + modelParams;\n      queryParamStr += \"&r0=\" + r0_params;\n      queryParamStr += \"&resource_vals=\" + hospBeds + \",\" + ICUBeds + \",\" + ventilators;\n      queryParamStr += \"&state_info=\" + population + \",\" + weeklyHosp;\n      queryParamStr += \"&state_cases=\" + cases;\n      const url = rootUrl + endPoint + queryParamStr;\n      fetch(url).then(res => res.json()).then(json => {\n        json = JSON.parse(json);\n        this.setState({\n          model_results: json.results,\n          newly_infected: json.data.newly_infected,\n          hbeds_required: json.data.hbeds_required,\n          icubeds_required: json.data.icubeds_required,\n          vents_required: json.data.vents_required,\n          dates: json.data.dates\n        });\n        var axis = this.output.current.chartComponent.current.chartComponent.current.chart.axes[1];\n        axis.plotLinesAndBands.forEach(function (lineOrBand) {\n          for (var prop in axis.ticks) {\n            var tick = axis.ticks[prop];\n\n            if (Number(lineOrBand.options.value) === tick.pos) {\n              tick.gridLine.element.style.display = 'none';\n            }\n          }\n        });\n      }).catch(err => err);\n    };\n\n    this.state = {\n      // Model inputs\n      // Intervention lengths\n      measureWeeks: [0, 26, 0, 0, 0],\n      // Intervention Parameters\n      r0_params: ['2.67', '1.68', '1.40', '1.05', '0.32'],\n      // Model Parameters\n      modelParams: ['0.97', '1.66'],\n      // Resource Availability\n      // Hospital Beds\n      hospBeds: ['23187', '6.66', '40', '80'],\n      // ICU Beds\n      ICUBeds: ['476', '2.0', '40', '80', '100'],\n      // Ventilators\n      ventilators: ['358', '1.0', '40', '80', '300', '100'],\n      weeklyHosp: 54173,\n      // Model outputs\n      model_results: {},\n      newly_infected: [],\n      hbeds_required: [],\n      icubeds_required: [],\n      vents_required: [],\n      dates: [],\n      currentTab: 0\n    };\n    this.output = React.createRef();\n    this.appbar = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setState({\n      appbarHeight: this.appbar.current.clientHeight\n    });\n    var {\n      country,\n      state\n    } = this.props.region;\n    country = country.replace(/ /g, \"_\");\n    state = state.replace(/ /g, \"_\");\n    const rootUrl = config[\"api_url\"];\n    const infoEndpoint = \"info\";\n    const caseEndpoint = \"case\";\n    var queryParamStr = \"?country=\" + country;\n\n    if (state !== \"\") {\n      queryParamStr += \"&state=\" + state;\n    }\n\n    const infoUrl = rootUrl + infoEndpoint + queryParamStr;\n    fetch(infoUrl).then(res => !res.ok ? res.text().then(text => {\n      throw Error(text);\n    }) : res.json()).then(json => {\n      json = JSON.parse(json);\n      const hbeds = json[\"public hospital beds\"] + json[\"private hospital beds\"];\n      const icu_beds = json[\"icu beds\"];\n      const weekly_hosp = json[\"weekly hospital\"];\n      var {\n        hospBeds,\n        ICUBeds\n      } = this.state;\n      hospBeds[0] = hbeds;\n      ICUBeds[0] = icu_beds;\n      this.setState({\n        population: json.population,\n        hospBeds: hospBeds,\n        ICUBeds: ICUBeds,\n        weeklyHosp: weekly_hosp\n      }); // Get cases info from API\n      // Compute date 15 days before (should be 13 but redundancy to deal with time zone diffs)\n\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() - 15);\n      const startDateString = startDate.toISOString().split(\"T\")[0];\n      queryParamStr += \"&start_date=\" + startDateString;\n      queryParamStr += \"&app=\" + 1;\n      const caseUrl = rootUrl + caseEndpoint + queryParamStr;\n      fetch(caseUrl).then(res => !res.ok ? res.text().then(text => {\n        throw Error(text);\n      }) : res.json()).then(json => {\n        json = JSON.parse(json);\n        const cases = json[\"cases\"];\n\n        while (cases.length !== 13) {\n          const first = cases.shift();\n          cases[0] += first;\n        }\n\n        this.setState({\n          cases: cases\n        });\n        this.updateData();\n      }).catch(err => console.log(err));\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      currentTab,\n      measureWeeks,\n      modelParams,\n      r0_params,\n      hospBeds,\n      ICUBeds,\n      ventilators,\n      model_results,\n      newly_infected,\n      hbeds_required,\n      icubeds_required,\n      vents_required,\n      dates,\n      appbarHeight\n    } = this.state;\n    const navbarHeight = this.props.navbarHeight;\n    return /*#__PURE__*/React.createElement(Row, {\n      style: {\n        margin: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      ref: this.appbar,\n      className: \"border-bottom border-gray\",\n      style: {\n        paddingBottom: 5,\n        position: \"fixed\",\n        top: navbarHeight\n      },\n      color: \"inherit\",\n      elevation: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      value: currentTab,\n      onChange: (_, value) => {\n        this.setState({\n          currentTab: value\n        });\n      },\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      variant: \"scrollable\",\n      scrollButtons: \"auto\",\n      \"aria-label\": \"full width tabs example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      label: \"Infections\",\n      id: \"full-width-tab-0\",\n      \"aria-controls\": \"full-width-tabpanel-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Tab, {\n      label: \"Hospital Beds\",\n      id: \"full-width-tab-1\",\n      \"aria-controls\": \"full-width-tabpanel-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Tab, {\n      label: \"ICU Beds\",\n      id: \"full-width-tab-2\",\n      \"aria-controls\": \"full-width-tabpanel-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Tab, {\n      label: \"Ventilators\",\n      id: \"full-width-tab-3\",\n      \"aria-controls\": \"full-width-tabpanel-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      xs: 3,\n      style: {\n        paddingRight: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Fixed border-right border-gray\",\n      style: {\n        paddingTop: appbarHeight + navbarHeight ? 20 + appbarHeight + navbarHeight : 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      params: {\n        measureWeeks: measureWeeks,\n        modelParams: modelParams,\n        r0_params: r0_params,\n        hospBeds: hospBeds,\n        ICUBeds: ICUBeds,\n        ventilators: ventilators\n      },\n      currentTab: currentTab,\n      eventHandlers: {\n        updateData: this.updateData,\n        updateMeasureWeeks: this.updateMeasureWeeks,\n        updateModelParams: this.updateModelParams,\n        updateR0Params: this.updateR0Params,\n        updateHospBeds: this.updateHospBeds,\n        updateICUBeds: this.updateICUBeds,\n        updateVentilators: this.updateVentilators\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      xs: 9,\n      style: {\n        backgroundColor: '#fefefa',\n        paddingLeft: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: appbarHeight + navbarHeight ? 20 + appbarHeight + navbarHeight : 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Output, {\n      barHeight: appbarHeight + navbarHeight,\n      results: model_results,\n      measureWeeks: measureWeeks,\n      resources: {\n        numHospBeds: hospBeds[0],\n        numICUBeds: ICUBeds[0],\n        numVents: ventilators[0]\n      },\n      region: {\n        country: this.props.region.country,\n        state: this.props.region.state\n      },\n      currentTab: currentTab,\n      dates: dates,\n      newly_infected: newly_infected,\n      hbeds_required: hbeds_required,\n      icubeds_required: icubeds_required,\n      vents_required: vents_required,\n      ref: this.output,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/khoa/Dropbox/Websites/covid19/covid-app/client/src/components/Model.js"],"names":["React","Component","Row","Col","AppBar","Tabs","Tab","Input","Output","config","require","Model","constructor","props","updateMeasureWeeks","measureWeeks","setState","updateModelParams","modelParams","updateData","updateR0Params","r0_params","updateHospBeds","hospBeds","updateICUBeds","ICUBeds","updateVentilators","ventilators","updateTab","tabIndx","currentTab","population","weeklyHosp","cases","state","rootUrl","endPoint","queryParamStr","url","fetch","then","res","json","JSON","parse","model_results","results","newly_infected","data","hbeds_required","icubeds_required","vents_required","dates","axis","output","current","chartComponent","chart","axes","plotLinesAndBands","forEach","lineOrBand","prop","ticks","tick","Number","options","value","pos","gridLine","element","style","display","catch","err","createRef","appbar","componentDidMount","appbarHeight","clientHeight","country","region","replace","infoEndpoint","caseEndpoint","infoUrl","ok","text","Error","hbeds","icu_beds","weekly_hosp","startDate","Date","setDate","getDate","startDateString","toISOString","split","caseUrl","length","first","shift","console","log","render","navbarHeight","margin","paddingBottom","position","top","_","paddingRight","paddingTop","backgroundColor","paddingLeft","numHospBeds","numICUBeds","numVents"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport Input from './Input';\nimport Output from './Output';\nconst config = require('../config.json');\n\nexport default class Model extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            // Model inputs\n            // Intervention lengths\n            measureWeeks:               [0, 26, 0, 0, 0],\n            \n            // Intervention Parameters\n            r0_params:                  ['2.67', '1.68', '1.40', '1.05', '0.32'],\n            \n            // Model Parameters\n            modelParams:                ['0.97', '1.66'],\n\n            // Resource Availability\n            // Hospital Beds\n            hospBeds:                   ['23187', '6.66', '40', '80'],\n            // ICU Beds\n            ICUBeds:                    ['476', '2.0', '40', '80', '100'],\n            // Ventilators\n            ventilators:                ['358', '1.0', '40', '80', '300', '100'],\n\n            weeklyHosp:                 54173,\n\n            // Model outputs\n            model_results:              {},\n            newly_infected:             [],\n            hbeds_required:             [],\n            icubeds_required:           [],\n            vents_required:             [],\n            dates:                      [],\n            currentTab:                 0\n        };\n        this.output = React.createRef();\n        this.appbar = React.createRef();\n    }\n\n    updateMeasureWeeks = (measureWeeks) => {\n        this.setState({ measureWeeks: measureWeeks });\n    }\n\n    updateModelParams = (modelParams) => {\n        this.setState({ modelParams: modelParams });\n        this.updateData();\n    }\n\n    updateR0Params = (r0_params) => {\n        this.setState({ r0_params: r0_params });\n        this.updateData();\n    }\n    \n    updateHospBeds = (hospBeds) => {\n        this.setState({ hospBeds: hospBeds });\n        this.updateData();\n    }\n\n    updateICUBeds = (ICUBeds) => {\n        this.setState({ ICUBeds: ICUBeds });\n        this.updateData();\n    }\n\n    updateVentilators = (ventilators) => {\n        this.setState({ ventilators: ventilators });\n        this.updateData();\n    }\n    \n    updateTab = (tabIndx) => {\n        this.setState({ currentTab: tabIndx });\n    }\n\n    updateData = () => {\n        const { measureWeeks, modelParams, r0_params, hospBeds, ICUBeds, ventilators, population, weeklyHosp, cases } = this.state;\n        const rootUrl = config[\"api_url\"];\n        const endPoint = \"model\"\n        var queryParamStr = \"?int_len=\" + measureWeeks;\n        queryParamStr += \"&model_vals=\" + modelParams;\n        queryParamStr += \"&r0=\" + r0_params;\n        queryParamStr += \"&resource_vals=\" + hospBeds + \",\" + ICUBeds + \",\" + ventilators;\n        queryParamStr += \"&state_info=\" + population + \",\" + weeklyHosp;\n        queryParamStr += \"&state_cases=\" + cases;\n        const url = rootUrl + endPoint + queryParamStr;\n        fetch(url)\n            .then(res => res.json())\n            .then(json => {\n                json = JSON.parse(json);\n                this.setState({ \n                    model_results: json.results, \n                    newly_infected: json.data.newly_infected,\n                    hbeds_required: json.data.hbeds_required,\n                    icubeds_required: json.data.icubeds_required,\n                    vents_required: json.data.vents_required,\n                    dates: json.data.dates\n                });\n                var axis = this.output.current.chartComponent.current.chartComponent.current.chart.axes[1];\n                axis.plotLinesAndBands.forEach(function(lineOrBand) {\n                    for (var prop in axis.ticks) {\n                        var tick = axis.ticks[prop];\n                        if (Number(lineOrBand.options.value) === tick.pos) {\n                            tick.gridLine.element.style.display = 'none';\n                        }\n                    }\n                });\n            })\n            .catch(err => err);\n    }\n\n    componentDidMount() {\n        this.setState({ appbarHeight: this.appbar.current.clientHeight });\n        var { country, state } = this.props.region;\n        country = country.replace(/ /g, \"_\");\n        state = state.replace(/ /g, \"_\");\n        const rootUrl = config[\"api_url\"];\n        const infoEndpoint = \"info\";\n        const caseEndpoint = \"case\";\n        var queryParamStr = \"?country=\" + country;\n        if (state !== \"\"){\n            queryParamStr += \"&state=\" + state;\n        }\n        const infoUrl = rootUrl + infoEndpoint + queryParamStr;\n        fetch(infoUrl)\n            .then(res => !res.ok ? res.text().then(text => {throw Error(text)}) : res.json())\n            .then(json => {\n                json = JSON.parse(json);\n                const hbeds = json[\"public hospital beds\"] + json[\"private hospital beds\"];\n                const icu_beds = json[\"icu beds\"];\n                const weekly_hosp = json[\"weekly hospital\"];\n                var { hospBeds, ICUBeds } = this.state;\n                hospBeds[0] = hbeds;\n                ICUBeds[0] = icu_beds;\n                this.setState({\n                    population: json.population,\n                    hospBeds: hospBeds,\n                    ICUBeds: ICUBeds,\n                    weeklyHosp: weekly_hosp\n                });\n\n                // Get cases info from API\n                // Compute date 15 days before (should be 13 but redundancy to deal with time zone diffs)\n                const startDate = new Date();\n                startDate.setDate(startDate.getDate() - 15);\n                const startDateString = startDate.toISOString().split(\"T\")[0];\n                queryParamStr += \"&start_date=\" + startDateString;\n                queryParamStr += \"&app=\" + 1;\n                const caseUrl = rootUrl + caseEndpoint + queryParamStr;\n                fetch(caseUrl)\n                    .then(res => !res.ok ? res.text().then(text => {throw Error(text)}) : res.json())\n                    .then(json => {\n                        json = JSON.parse(json);\n                        const cases = json[\"cases\"];\n                        while (cases.length !== 13){\n                            const first = cases.shift();\n                            cases[0] += first;\n                        }\n                        this.setState({ cases: cases });\n                        this.updateData();\n                    })\n                    .catch(err => console.log(err))\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        const { currentTab, measureWeeks, modelParams, r0_params, \n            hospBeds, ICUBeds, ventilators, \n            model_results, newly_infected, hbeds_required, icubeds_required, vents_required,\n            dates, appbarHeight } = this.state;\n        const navbarHeight = this.props.navbarHeight;\n        return (\n        <Row style={{ margin: 0 }}>\n            <AppBar \n                ref={this.appbar}\n                className=\"border-bottom border-gray\" \n                style={{ paddingBottom: 5, position: \"fixed\", top: navbarHeight }} \n                color=\"inherit\" \n                elevation={0}>\n                <Tabs\n                value={currentTab}\n                onChange={(_, value) => {\n                    this.setState({currentTab: value})\n                }}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n                aria-label=\"full width tabs example\"\n                >\n                <Tab label=\"Infections\"\n                id=\"full-width-tab-0\"\n                aria-controls=\"full-width-tabpanel-0\"/>\n                <Tab label=\"Hospital Beds\"\n                id=\"full-width-tab-1\"\n                aria-controls=\"full-width-tabpanel-1\"/>\n                <Tab label=\"ICU Beds\"\n                id=\"full-width-tab-2\"\n                aria-controls=\"full-width-tabpanel-2\"/>\n                <Tab label=\"Ventilators\"\n                id=\"full-width-tab-3\"\n                aria-controls=\"full-width-tabpanel-3\"/>\n                </Tabs>\n            </AppBar>\n            <Col xs={3} style={{ paddingRight: 0 }}>\n                <div className=\"Fixed border-right border-gray\" style={{ paddingTop: appbarHeight+navbarHeight ? 20 + appbarHeight + navbarHeight : 0 }}>\n                    <Input\n                        params={{\n                            measureWeeks: measureWeeks, \n                            modelParams: modelParams, \n                            r0_params: r0_params, \n                            hospBeds: hospBeds, \n                            ICUBeds: ICUBeds, \n                            ventilators: ventilators\n                        }}\n                        currentTab={currentTab}\n                        eventHandlers={{\n                            updateData: this.updateData,\n                            updateMeasureWeeks: this.updateMeasureWeeks,\n                            updateModelParams: this.updateModelParams,\n                            updateR0Params: this.updateR0Params,\n                            updateHospBeds: this.updateHospBeds,\n                            updateICUBeds: this.updateICUBeds,\n                            updateVentilators: this.updateVentilators\n                        }}/>\n                </div>\n            </Col>\n            <Col xs={9} style={{ backgroundColor: '#fefefa', paddingLeft: 0 }}>\n                <div style={{ paddingTop: appbarHeight+navbarHeight ? 20 + appbarHeight + navbarHeight : 0 }}>\n                <Output \n                    barHeight={appbarHeight + navbarHeight}\n                    results={model_results}\n                    measureWeeks={measureWeeks}\n                    resources={{\n                        numHospBeds: hospBeds[0],\n                        numICUBeds:  ICUBeds[0],\n                        numVents:    ventilators[0]\n                    }}\n                    region = {{ \n                        country: this.props.region.country,\n                        state: this.props.region.state\n                    }}\n                    currentTab={currentTab}\n                    dates={dates}\n                    newly_infected={newly_infected}\n                    hbeds_required={hbeds_required}\n                    icubeds_required={icubeds_required}\n                    vents_required={vents_required}\n                    ref={this.output}/>\n                </div>\n            </Col>\n        </Row>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}