{"ast":null,"code":"var _jsxFileName = \"/Users/khoa/Dropbox/Websites/covid19/covid-app/client/src/components/Output.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport Chart from './Chart';\nexport default class Output extends Component {\n  constructor(props) {\n    super(props);\n    this.chartComponent = React.createRef();\n  }\n\n  render() {\n    const {\n      results,\n      resources,\n      newly_infected\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, results && /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      style: {\n        padding: 20,\n        paddingTop: 80\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fixed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"Measures\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 51\n      }\n    }, \"Model Data\")), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      className: \"align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      resources: resources,\n      newly_infected: newly_infected,\n      ref: this.chartComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"left\"\n      },\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, \"Key Statistics\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, \"What happened?\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, \"Total weeks of action: \", results[\"total_weeks_action\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, \"Did the pandemic end before September 22nd? \", results[\"pandemic_end\"] ? \"Yes\" : \"No\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, \"Average R0 from your actions: \", results[\"average_R0\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, \"Peak of pandemic was at: \", results[\"pandemic_peak\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, \"Daily infection rate at the peak: \", results[\"daily_infection_rate_at_peak\"])), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, \"Population Totals\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, \"Total infected over 6 months: \", results[\"total_infected\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, \"Total saved (not infected) over 6 months: \", results[\"total_saved\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \"Percentage of population infected: \", results[\"percent_infected\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, \"Total hospitalised over 6 months: \", results[\"total_hospitalised\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, \"Total in ICU over 6 months: \", results[\"total_received_icu\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, \"Total ventilated over 6 months: \", results[\"total_received_vent\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, \"Total deceased over 6 months: \", results[\"total_deaths\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, \"Total deaths from hospital overload: \", results[\"total_deaths_overload\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"Percentage of total deaths from hospital overload: \", results[\"percentage_deaths_overload\"])), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \"Hospital Beds\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, \"Beds required at the peak: \", results[\"hbed_req_peak\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, \"Shortfall of beds at the peak: \", results[\"shortfall_hbeds_peak\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, \"When beds would run out (normal capacity): \", results[\"hbeds_run_out_normal\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, \"When beds would run out (surge capacity): \", results[\"hbeds_run_out_surge\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"How many days beds ran out for (surge capacity): \", results[\"days_hbed_out\"])), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \"ICU Beds\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"ICU beds required at the peak: \", results[\"icubeds_req_peak\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, \"Shortfall in ICU beds at peak: \", results[\"shortfall_icubeds_peak\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"Number of patients who missed out on an ICU bed: \", results[\"patients_missed_out_icubeds\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, \"When ICU beds would run out (normal capacity): \", results[\"icubeds_run_out_normal\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, \"When ICU beds would run out (surge capacity): \", results[\"icubeds_run_out_surge\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, \"How many days ICU beds ran out for (surge capacity): \", results[\"days_icubed_out\"])), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"Ventilators\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, \"Ventilators required at the peak: \", results[\"vents_req_peak\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, \"Shortfall in ventilators at peak: \", results[\"shortfall_vents_peak\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, \"Number of patients who missed out on a ventilator: \", results[\"patients_missed_out_ventilators\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"When ventilators would run out (normal capacity): \", results[\"vents_run_out_normal\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, \"When ventilators would run out (surge capacity): \", results[\"vents_run_out_surge\"]), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, \"How many days ventilators ran out for (surge capacity): \", results[\"days_vents_out\"]))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/khoa/Dropbox/Websites/covid19/covid-app/client/src/components/Output.js"],"names":["React","Component","Row","Col","Container","Chart","Output","constructor","props","chartComponent","createRef","render","results","resources","newly_infected","padding","paddingTop","justifyContent","height","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Chart from './Chart';\r\n\r\nexport default class Output extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.chartComponent = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        const { results, resources, newly_infected } = this.props;\r\n        return(\r\n            <div>\r\n            { results && <Container fluid style={{ padding: 20, paddingTop: 80 }}>\r\n                <Row>\r\n                <Col lg={8}>\r\n                    <div className=\"fixed\">\r\n                        <Row className=\"Measures\"><h4>Model Data</h4></Row>\r\n                        <Row style={{ justifyContent: \"center\", height: \"100%\" }} className=\"align-items-center\">\r\n                            <Chart resources={resources} newly_infected={newly_infected} ref={this.chartComponent}/>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                <Col style={{ textAlign: \"left\" }} lg={4}>\r\n                    <h4>Key Statistics</h4>\r\n                    <h5>What happened?</h5>\r\n                    <ul>\r\n                        <li>Total weeks of action: {results[\"total_weeks_action\"]}</li>\r\n                        <li>Did the pandemic end before September 22nd? {results[\"pandemic_end\"] ? \"Yes\" : \"No\"}</li>\r\n                        <li>Average R0 from your actions: {results[\"average_R0\"]}</li>\r\n                        <li>Peak of pandemic was at: {results[\"pandemic_peak\"]}</li>\r\n                        <li>Daily infection rate at the peak: {results[\"daily_infection_rate_at_peak\"]}</li>\r\n                    </ul>\r\n                    <h5>Population Totals</h5>\r\n                    <ul>\r\n                        <li>Total infected over 6 months: {results[\"total_infected\"]}</li>\r\n                        <li>Total saved (not infected) over 6 months: {results[\"total_saved\"]}</li>\r\n                        <li>Percentage of population infected: {results[\"percent_infected\"]}</li>\r\n                        <li>Total hospitalised over 6 months: {results[\"total_hospitalised\"]}</li>\r\n                        <li>Total in ICU over 6 months: {results[\"total_received_icu\"]}</li>\r\n                        <li>Total ventilated over 6 months: {results[\"total_received_vent\"]}</li>\r\n                        <li>Total deceased over 6 months: {results[\"total_deaths\"]}</li>\r\n                        <li>Total deaths from hospital overload: {results[\"total_deaths_overload\"]}</li>\r\n                        <li>Percentage of total deaths from hospital overload: {results[\"percentage_deaths_overload\"]}</li>\r\n                    </ul>\r\n                    <h5>Hospital Beds</h5>\r\n                    <ul>\r\n                        <li>Beds required at the peak: {results[\"hbed_req_peak\"]}</li>\r\n                        <li>Shortfall of beds at the peak: {results[\"shortfall_hbeds_peak\"]}</li>\r\n                        <li>When beds would run out (normal capacity): {results[\"hbeds_run_out_normal\"]}</li>\r\n                        <li>When beds would run out (surge capacity): {results[\"hbeds_run_out_surge\"]}</li>\r\n                        <li>How many days beds ran out for (surge capacity): {results[\"days_hbed_out\"]}</li>\r\n                    </ul>\r\n                    <h5>ICU Beds</h5>\r\n                    <ul>\r\n                        <li>ICU beds required at the peak: {results[\"icubeds_req_peak\"]}</li>\r\n                        <li>Shortfall in ICU beds at peak: {results[\"shortfall_icubeds_peak\"]}</li>\r\n                        <li>Number of patients who missed out on an ICU bed: {results[\"patients_missed_out_icubeds\"]}</li>\r\n                        <li>When ICU beds would run out (normal capacity): {results[\"icubeds_run_out_normal\"]}</li>\r\n                        <li>When ICU beds would run out (surge capacity): {results[\"icubeds_run_out_surge\"]}</li>\r\n                        <li>How many days ICU beds ran out for (surge capacity): {results[\"days_icubed_out\"]}</li>\r\n                    </ul>\r\n                    <h5>Ventilators</h5>\r\n                    <ul>\r\n                        <li>Ventilators required at the peak: {results[\"vents_req_peak\"]}</li>\r\n                        <li>Shortfall in ventilators at peak: {results[\"shortfall_vents_peak\"]}</li>\r\n                        <li>Number of patients who missed out on a ventilator: {results[\"patients_missed_out_ventilators\"]}</li>\r\n                        <li>When ventilators would run out (normal capacity): {results[\"vents_run_out_normal\"]}</li>\r\n                        <li>When ventilators would run out (surge capacity): {results[\"vents_run_out_surge\"]}</li>\r\n                        <li>How many days ventilators ran out for (surge capacity): {results[\"days_vents_out\"]}</li>\r\n                    </ul>\r\n                </Col>\r\n                </Row>\r\n            </Container>}\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}